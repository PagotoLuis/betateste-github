From 5441e14c36ced9dfb3a01f11ab5f1a24b0a7957a Mon Sep 17 00:00:00 2001
From: Stefan Metzmacher <metze@samba.org>
Date: Fri, 11 Sep 2020 14:06:04 +0200
Subject: [PATCH 126/361] CVE-2020-25717 winbindd: add and use
 idmap_child_pid()

We should avoid calling idmap_child() as much as possible.

BUG: https://bugzilla.samba.org/show_bug.cgi?id=14539

Signed-off-by: Stefan Metzmacher <metze@samba.org>
Reviewed-by: Gary Lockyer <gary@catalyst.net.nz>

BUG: https://bugzilla.samba.org/show_bug.cgi?id=14556

(cherry picked from commit 2103543629004a3a22e7bf60305bb15bf3b316be)
---
 source3/winbindd/winbindd_cm.c    | 12 ++++++------
 source3/winbindd/winbindd_dual.c  |  6 +++---
 source3/winbindd/winbindd_idmap.c |  5 +++++
 source3/winbindd/winbindd_proto.h |  1 +
 4 files changed, 15 insertions(+), 9 deletions(-)

diff --git a/source3/winbindd/winbindd_cm.c b/source3/winbindd/winbindd_cm.c
index 5fb22d7e9c8..bb819bbba19 100644
--- a/source3/winbindd/winbindd_cm.c
+++ b/source3/winbindd/winbindd_cm.c
@@ -463,11 +463,11 @@ void set_domain_offline(struct winbindd_domain *domain)
 	   primary domain goes offline */
 
 	if ( domain->primary ) {
-		struct winbindd_child *idmap = idmap_child();
+		pid_t idmap_pid = idmap_child_pid();
 
-		if ( idmap->pid != 0 ) {
+		if (idmap_pid != 0) {
 			messaging_send_buf(global_messaging_context(),
-					   pid_to_procid(idmap->pid), 
+					   pid_to_procid(idmap_pid),
 					   MSG_WINBIND_OFFLINE, 
 					   (const uint8_t *)domain->name,
 					   strlen(domain->name)+1);
@@ -549,11 +549,11 @@ static void set_domain_online(struct winbindd_domain *domain)
 	   primary domain comes online */
 
 	if ( domain->primary ) {
-		struct winbindd_child *idmap = idmap_child();
+		pid_t idmap_pid = idmap_child_pid();
 
-		if ( idmap->pid != 0 ) {
+		if (idmap_pid != 0) {
 			messaging_send_buf(global_messaging_context(),
-					   pid_to_procid(idmap->pid), 
+					   pid_to_procid(idmap_pid),
 					   MSG_WINBIND_ONLINE, 
 					   (const uint8_t *)domain->name,
 					   strlen(domain->name)+1);
diff --git a/source3/winbindd/winbindd_dual.c b/source3/winbindd/winbindd_dual.c
index b1c86b2979c..0edfc2d205d 100644
--- a/source3/winbindd/winbindd_dual.c
+++ b/source3/winbindd/winbindd_dual.c
@@ -1071,11 +1071,11 @@ void winbind_msg_online(struct messaging_context *msg_ctx,
 		   primary domain comes back online */
 
 		if ( domain->primary ) {
-			struct winbindd_child *idmap = idmap_child();
+			pid_t idmap_pid = idmap_child_pid();
 
-			if ( idmap->pid != 0 ) {
+			if (idmap_pid != 0) {
 				messaging_send_buf(msg_ctx,
-						   pid_to_procid(idmap->pid), 
+						   pid_to_procid(idmap_pid),
 						   MSG_WINBIND_ONLINE,
 						   (const uint8_t *)domain->name,
 						   strlen(domain->name)+1);
diff --git a/source3/winbindd/winbindd_idmap.c b/source3/winbindd/winbindd_idmap.c
index 2ee436bc7dc..965a7839f17 100644
--- a/source3/winbindd/winbindd_idmap.c
+++ b/source3/winbindd/winbindd_idmap.c
@@ -34,6 +34,11 @@ struct winbindd_child *idmap_child(void)
 	return &static_idmap_child;
 }
 
+pid_t idmap_child_pid(void)
+{
+	return static_idmap_child.pid;
+}
+
 struct dcerpc_binding_handle *idmap_child_handle(void)
 {
 	return static_idmap_child.binding_handle;
diff --git a/source3/winbindd/winbindd_proto.h b/source3/winbindd/winbindd_proto.h
index 6d4ffa726f1..ce391ab7ec5 100644
--- a/source3/winbindd/winbindd_proto.h
+++ b/source3/winbindd/winbindd_proto.h
@@ -366,6 +366,7 @@ NTSTATUS winbindd_print_groupmembers(struct db_context *members,
 
 void init_idmap_child(void);
 struct winbindd_child *idmap_child(void);
+pid_t idmap_child_pid(void);
 struct dcerpc_binding_handle *idmap_child_handle(void);
 struct idmap_domain *idmap_find_domain_with_sid(const char *domname,
 						const struct dom_sid *sid);
-- 
2.30.2

