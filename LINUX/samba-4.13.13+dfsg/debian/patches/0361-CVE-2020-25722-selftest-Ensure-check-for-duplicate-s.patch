From 13db231ea1bbe6ba580b5278fe6c5a2d8f7319fb Mon Sep 17 00:00:00 2001
From: Joseph Sutton <josephsutton@catalyst.net.nz>
Date: Tue, 2 Nov 2021 21:00:00 +1300
Subject: [PATCH 361/361] CVE-2020-25722 selftest: Ensure check for duplicate
 servicePrincipalNames is not bypassed for an add operation

BUG: https://bugzilla.samba.org/show_bug.cgi?id=14564

If one of the objectClass checks passed, samldb_add() could return
through one of the samldb_fill_*() functions and skip the
servicePrincipalName uniqueness checking.

Signed-off-by: Joseph Sutton <josephsutton@catalyst.net.nz>
---
 selftest/knownfail.d/spn_uniqueness     |  2 --
 source4/dsdb/samdb/ldb_modules/samldb.c | 25 ++++++++++++-------------
 2 files changed, 12 insertions(+), 15 deletions(-)
 delete mode 100644 selftest/knownfail.d/spn_uniqueness

diff --git a/selftest/knownfail.d/spn_uniqueness b/selftest/knownfail.d/spn_uniqueness
deleted file mode 100644
index 3f6c2f03191..00000000000
--- a/selftest/knownfail.d/spn_uniqueness
+++ /dev/null
@@ -1,2 +0,0 @@
-^samba4.sam.python\(ad_dc_default\).__main__.SamTests.test_service_principal_name_uniqueness\(ad_dc_default\)
-^samba4.sam.python\(fl2008r2dc\).__main__.SamTests.test_service_principal_name_uniqueness\(fl2008r2dc\)
diff --git a/source4/dsdb/samdb/ldb_modules/samldb.c b/source4/dsdb/samdb/ldb_modules/samldb.c
index 810365ca030..f0227411ccd 100644
--- a/source4/dsdb/samdb/ldb_modules/samldb.c
+++ b/source4/dsdb/samdb/ldb_modules/samldb.c
@@ -4838,6 +4838,18 @@ static int samldb_add(struct ldb_module *module, struct ldb_request *req)
 		}
 	}
 
+	el = ldb_msg_find_element(ac->msg, "servicePrincipalName");
+	if ((el != NULL)) {
+		/*
+		 * We need to check whether the SPN collides with an existing
+		 * one (anywhere) including via aliases.
+		 */
+		ret = samldb_spn_uniqueness_check(ac, el);
+		if (ret != LDB_SUCCESS) {
+			return ret;
+		}
+	}
+
 	if (samdb_find_attribute(ldb, ac->msg,
 				 "objectclass", "user") != NULL) {
 		ac->type = SAMLDB_TYPE_USER;
@@ -4936,19 +4948,6 @@ static int samldb_add(struct ldb_module *module, struct ldb_request *req)
 		return samldb_fill_object(ac);
 	}
 
-
-	el = ldb_msg_find_element(ac->msg, "servicePrincipalName");
-	if ((el != NULL)) {
-		/*
-		 * We need to check whether the SPN collides with an existing
-		 * one (anywhere) including via aliases.
-		 */
-		ret = samldb_spn_uniqueness_check(ac, el);
-		if (ret != LDB_SUCCESS) {
-			return ret;
-		}
-	}
-
 	if (samdb_find_attribute(ldb, ac->msg,
 				 "objectclass", "subnet") != NULL) {
 		ret = samldb_verify_subnet(ac, ac->msg->dn);
-- 
2.30.2

